openapi: 3.0.1
security: []
info:
  title: 3d store-trigger
  description: Ingesting and exporting 3d model to S3/NFS
  version: 2.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /jobStatus/{jobId}:
    get:
      operationId: getJobStatus
      tags:
        - jobStatus
      summary: gets the resource
      parameters:
        - $ref: '#/components/parameters/jobId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobStatus'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /jobOperations/ingestion:
    post:
      operationId: createModel
      tags:
        - jobOperations
      summary: creates a new "ingestion" job to invokes a new model "ingestion" flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payload'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /jobOperations/delete:
    post:
      operationId: deleteModel
      tags:
        - jobOperations
      summary: creates a new "delete" job to invokes a "delete" flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete-payload'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  parameters:
    jobId:
      in: path
      name: jobId
      required: true
      schema:
        type: string
      description: The jobId for status check
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    payload:
      type: object
      description: 3d model payload
      required:
        - modelId
        - pathToTileset
        - tilesetFilename
        - metadata
      properties:
        modelId:
          type: string
          description: Model identifier
          example: a2234fdf
        pathToTileset:
          type: string
          description: path to tileset
          example: NewYork
        tilesetFilename:
          type: string
          description: Model tileset filename
          example: tileset.json
        metadata:
          $ref: >-
            ./Schema/3dCatalog/3dMetadata.yaml#/components/schemas/ingestion-payload
      additionalProperties: false
    delete-payload:
      type: object
      description: 3d tiles ingestion payload
      required:
        - modelId
        - productId
        - productVersion
        - productName
        - productType
        - producerName
      properties:
        modelId:
          type: string
          description: ID of model in catalog
        productId:
          type: string
          description: Product ID of model in catalog
        productVersion:
          type: integer
          example: 1
          description: Number of version
        productName:
          type: string
          maxLength: 120
          description: Name of product
        productType:
          type: string
          description: Type of product (3DPhotoRealistic)
          example: 3DPhotoRealistic
        producerName:
          type: string
          description: The name of the producer (product owner)
    createResponse:
      type: object
      description: The ingestion response
      required:
        - jobId
        - status
      properties:
        status:
          type: string
          enum:
            - Completed
            - In-Progress
            - Pending
            - Failed
            - Expired
            - Aborted
        jobId:
          type: string
          description: job id
    jobStatus:
      type: object
      description: The job response
      required:
        - status
        - percentage
      properties:
        percentage:
          type: number
          minimum: 0
          maximum: 100
          description: percentage of task by job id
        status:
          type: string
          enum:
            - Completed
            - In-Progress
            - Pending
            - Failed
            - Expired
            - Aborted
