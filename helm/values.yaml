global:
  cloudProvider:
    dockerRegistryUrl: registry
    flavor: openshift
    imagePullSecretName:
  imagePullPolicy: IfNotPresent
  tracing: {}
  metrics: {}

  providers:
    source: NFS
    destination: S3
  S3:
    accessKey: ''
    secretAccessKey: ''
    server: ''
    serverPort:
    serverProto: ''
    bucket: ''
    region: ''
    style: ''
    sslEnabled: false
    maxAttempts:

  NFS:
    name: ''
    pv_path: ''
    sub_path: ''

  jobManager:
    url:
    ingestion:
      jobType: ''
      taskType: ''
      batches:
    delete:
      jobType: ''
      taskType: ''

cloudProvider:
  dockerRegistryUrl:
  flavor:
  imagePullSecretName:

imagePullPolicy:

mcLabelsAndAnnotations:
  component: backend
  partOf: ingestion
  owner: 3d
  gisDomain: 3d
  prometheus:
    enabled: true

image:
  repository: store-trigger
  tag: 'latest'

nodePort: 30030
replicaCount: 1
revisionHistoryLimit: 5   # Amount of revisions we keep

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /liveness
ca:
  enabled: false
  useExternal: false
  secretName:
  path:
  key:

extraVolumes: {}

extraVolumeMounts: {}

sidecars: {}

podAnnotations: {}

provider:

S3:
  accessKey: ''
  secretAccessKey: ''
  server: ''
  serverPort:
  serverProto: ''
  bucket: ''
  region: ''
  style: ''
  sslEnabled: false
  maxAttempts:

NFS:
  name: ''
  pv_path: ''
  sub_path: ''

jobManager:
  url:
  ingestion:
    jobType:
    taskType:
    batches:
  delete:
    jobType:
    taskType:
env:
  port: 80
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 10mb
  tracing:
    enabled: false
    url: ''
  metrics:
    enabled: false
    url: ''
  blackList: ["tar", "zip", "rar", "7z"]
  maxConcurrency: 5

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: false
  path: /
  host:
  timeout:
    enabled: false    # defaults to 30s by openshift
    duration: 60s    # supported units (us, ms, s, m, h, d)
  rewriteTarget: ''
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
    certificate: ''
    key: ''
    caCertificate: ''

ingress:
  enabled: false
  path: /
  host: localhost
  cors:
    enabled: true
    origin: '*'
