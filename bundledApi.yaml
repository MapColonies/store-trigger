openapi: 3.0.1
info:
  title: 3d store-trigger
  description: Ingesting and exporting 3d model to S3/NFS
  version: 1.5.4
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /jobStatus/{jobId}:
    get:
      operationId: getJobStatus
      tags:
        - jobStatus
      summary: gets the resource
      parameters:
        - $ref: '#/components/parameters/jobId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobStatus'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /ingestion:
    post:
      operationId: createModel
      tags:
        - ingestion
      summary: creates a new job and invokes a new model ingestion flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payload'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  parameters:
    jobId:
      in: path
      name: jobId
      required: true
      schema:
        type: string
      description: The jobId for status check
  schemas:
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    payload:
      type: object
      description: 3d model payload
      required:
        - modelId
        - pathToTileset
        - tilesetFilename
        - metadata
      properties:
        modelId:
          type: string
          description: Model identifier
          example: a2234fdf
        pathToTileset:
          type: string
          description: path to tileset
          example: NewYork
        tilesetFilename:
          type: string
          description: Model tileset filename
          example: tileset.json
        metadata:
          $ref: '#/components/schemas/ingestion-payload'
      additionalProperties: false
    createResponse:
      type: object
      description: The ingestion response
      required:
        - jobId
        - status
      properties:
        status:
          type: string
          enum:
            - Completed
            - In-Progress
            - Pending
            - Failed
            - Expired
            - Aborted
        jobId:
          type: string
          description: job id
    jobStatus:
      type: object
      description: The job response
      required:
        - status
        - percentage
      properties:
        percentage:
          type: number
          minimum: 0
          maximum: 100
          description: percentage of task by job id
        status:
          type: string
          enum:
            - Completed
            - In-Progress
            - Pending
            - Failed
            - Expired
            - Aborted
    Point3D:
      type: array
      minItems: 2
      maxItems: 3
      items:
        type: number
    BBox:
      type: array
      minItems: 4
      items:
        type: number
      example:
        - -180
        - -90
        - 180
        - 90
    Point:
      type: object
      description: GeoJSON Point
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id2
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: Point
        coordinates:
          - -180
          - -90
    LineString:
      type: object
      description: GeoJSON LineString
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id3
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: LineString
        coordinates:
          - - -180
            - -90
          - - 180
            - 90
    Polygon:
      type: object
      description: GeoJSON Polygon
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id4
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: Polygon
        coordinates:
          - - - -180
              - -90
            - - 180
              - -90
            - - 180
              - 90
            - - -180
              - 90
            - - -180
              - -90
    MultiPoint:
      type: object
      description: GeoJSON MultiPoint
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id5
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: MultiPoint
        coordinates:
          - - -180
            - -90
          - - 180
            - 90
    MultiLineString:
      type: object
      description: GeoJSON MultiLineString
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: MultiLineString
        coordinates:
          - - - -180
              - -90
            - - 180
              - 90
          - - - -180
              - 90
            - - 180
              - 90
    MultiPolygon:
      type: object
      description: GeoJSON MultiPolygon
      externalDocs:
        url: http://geojson.org/geojson-spec.html#id6
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                $ref: '#/components/schemas/Point3D'
        bbox:
          $ref: '#/components/schemas/BBox'
      example:
        type: MultiPolygon
        coordinates:
          - - - - -180
                - -90
              - - 0
                - -90
              - - 0
                - 90
              - - -180
                - 90
              - - -180
                - -90
          - - - - 0
                - -90
              - - 180
                - -90
              - - 180
                - 90
              - - 0
                - 90
              - - 0
                - -90
    Geometry:
      description: GeoJSON Geometry
      discriminator:
        propertyName: type
      type: object
      anyOf:
        - $ref: '#/components/schemas/Point'
        - $ref: '#/components/schemas/LineString'
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/MultiPoint'
        - $ref: '#/components/schemas/MultiLineString'
        - $ref: '#/components/schemas/MultiPolygon'
    ingestion-payload:
      type: object
      description: 3d tiles ingestion payload
      required:
        - productName
        - productType
        - sourceDateStart
        - sourceDateEnd
        - maxAccuracyCE90
        - absoluteAccuracyLE90
        - sensors
        - footprint
        - srsId
        - srsName
        - region
        - classification
        - productionSystem
        - productionSystemVer
        - producerName
        - productSource
      properties:
        type:
          type: string
          nullable: true
          default: RECORD_3D
          description: Type of records
        productId:
          type: string
          nullable: true
          default: null
          description: ID of product
        productName:
          type: string
          maxLength: 120
          description: Name of product
        productType:
          type: string
          description: Type of product (3DPhotoRealistic)
          example: 3DPhotoRealistic
        description:
          type: string
          maxLength: 500
          nullable: true
          description: description and comments
        creationDate:
          type: string
          format: date-time
          nullable: true
          description: Creation date
        sourceDateStart:
          type: string
          format: date-time
          description: Oldest date of taken photo
        sourceDateEnd:
          type: string
          format: date-time
          description: Newest date of taken photo
        minResolutionMeter:
          type: number
          format: double
          nullable: true
          example: 1.1
          minimum: 0.01
          maximum: 8000
          description: Minimum resolution in meters
        maxResolutionMeter:
          type: number
          format: double
          nullable: true
          example: 1.5
          minimum: 0.01
          maximum: 8000
          description: Maximum resolution in meters
        maxAccuracyCE90:
          type: number
          format: double
          minimum: 0
          maximum: 999
          description: Maximum absolute horizontal accuracy
        absoluteAccuracyLE90:
          type: number
          format: double
          minimum: 0
          maximum: 999
          description: Absolute vertical accuracy
        accuracySE90:
          type: number
          format: double
          minimum: 0
          nullable: true
          maximum: 250
          description: Absolute spherical accuracy
        relativeAccuracySE90:
          type: number
          format: double
          nullable: true
          minimum: 0
          maximum: 100
          description: Relative vertical accuracy
        visualAccuracy:
          type: number
          format: double
          nullable: true
          minimum: 0
          maximum: 100
          description: Measure of visual quality
        sensors:
          type: array
          items:
            type: string
          minItems: 1
          description: Layer sensors list
          example:
            - OTHER
        footprint:
          allOf:
            - $ref: '#/components/schemas/Geometry'
            - description: Geographic demarcation of the product
            - example: >-
                {"type":"Polygon","coordinates":[[[1,2],[3,4],[5,6],[7,8],[1,2]]]}
        heightRangeFrom:
          type: number
          format: double
          nullable: true
          description: Minimum height range of ground
        heightRangeTo:
          type: number
          format: double
          nullable: true
          description: Maximum height range of ground
        srsId:
          type: string
          example: 4326
          description: ID of srs
        srsName:
          type: string
          description: Name of the srsID
          default: WGS84GEO
        region:
          type: array
          items:
            type: string
          minItems: 1
          description: regions included in the layer
        classification:
          type: string
          example: '5'
          description: Classification of the product
        productionSystem:
          type: string
          description: Production system
        productionSystemVer:
          type: string
          maxLength: 20
          description: Version production system
        producerName:
          type: string
          description: The name of the producer (product owner)
          default: IDFMU
        minFlightAlt:
          type: number
          format: double
          description: Minimum height of the flight
        maxFlightAlt:
          type: number
          nullable: true
          format: double
          description: Maximum height of the flight
        geographicArea:
          type: string
          nullable: true
          description: Area inside the region
        productStatus:
          type: string
          pattern: ^(UNPUBLISHED|PUBLISHED)$
          default: UNPUBLISHED
          description: The status of the model
        productSource:
          type: string
          description: The path of the model
        keywords:
          type: string
          nullable: true
          description: The keywords of the product
      additionalProperties: false
